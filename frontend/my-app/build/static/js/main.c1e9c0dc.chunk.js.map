{"version":3,"sources":["components/CheckBoxes.js","components/DragDrop.js","App.js","index.js"],"names":["CheckBoxes","_React$useState","React","whitespace","subtitles","transcribe","slides","_React$useState2","Object","slicedToArray","state","setState","handleChange","event","objectSpread","defineProperty","target","name","checked","react","Box","sx","display","FormControl","required","component","m","variant","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","disabled","label","FormHelperText","Button","DragDrop","useState","dragActive","setDragActive","inputRef","useRef","_React$useState3","_React$useState4","source","setSource","handleDrag","e","preventDefault","stopPropagation","type","handleFile","file","files","url","URL","createObjectURL","react_default","a","createElement","Fragment","id","onDragEnter","onSubmit","ref","multiple","accept","htmlFor","className","index_esm","size","onClick","current","click","onDragLeave","onDragOver","onDrop","dataTransfer","width","height","controls","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e9c0dc.chunk.js","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CheckBoxes() {\n  const [state, setState] = React.useState({\n    whitespace: true,\n    subtitles: false,\n    transcribe: false,\n    slides: false,\n  });\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const { whitespace, subtitles, transcribe, slides } = state;\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <FormControl\n          required\n          component=\"fieldset\"\n          sx={{ m: 3 }}\n          variant=\"standard\"\n        >\n          <FormLabel component=\"legend\">Choose your options</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={whitespace} onChange={handleChange} name=\"whitespace\" disabled />\n              }\n              label=\"Remove Whitespaces\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={subtitles} onChange={handleChange} name=\"subtitles\" />\n              }\n              label=\"Add Subtitles\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={transcribe} onChange={handleChange} name=\"transcribe\" />\n              }\n              label=\"Generate Transcription\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={slides} onChange={handleChange} name=\"slides\" />\n              }\n              label=\"Generate Slideshow\"\n            />\n          </FormGroup>\n          <FormHelperText>Choose at least 1</FormHelperText>\n        </FormControl>\n      </Box>\n      <Button variant=\"contained\">Submit</Button>\n    </>\n  );\n}","import React from \"react\";\nimport { AiOutlineCloudUpload } from 'react-icons/ai';\nimport CheckBoxes from \"./CheckBoxes\";\n\n\nexport default function DragDrop() {\n  const height = 400;\n  const width = 500;\n\n  const [dragActive, setDragActive] = React.useState(false);\n  const inputRef = React.useRef(null);\n  const [source, setSource] = React.useState();\n\n\n  // handle drag events\n  const handleDrag = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleFile = function (e) {\n    const file = e.target.files[0];\n    const url = URL.createObjectURL(file);\n    setSource(url);\n  }\n\n  // triggers when file is dropped\n  const handleDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFile(e);\n    }\n  };\n\n  // triggers when file is selected with click\n  const handleChange = function (e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      handleFile(e);\n    }\n  };\n\n  // triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n\n  return (\n    <>\n      {!source &&\n        <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\n          <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} accept=\".mov,.mp4\" onChange={handleChange} />\n          <label id=\"label-file-upload\" htmlFor=\"input-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\n            <div>\n              <AiOutlineCloudUpload size={70} />\n              <p>Drag and drop your video here or</p>\n              <button className=\"upload-button\" onClick={onButtonClick}>Choose a video</button>\n            </div>\n          </label>\n          {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\n        </form>\n      }\n      {source && (\n        <>\n          <CheckBoxes className=\"CheckBoxes\" />\n          <video\n            className=\"VideoInput_video\"\n            width={width}\n            height={height}\n            controls\n            src={source}\n          />\n        </>\n      )}\n    </>\n  );\n};","import React from \"react\";\nimport DragDrop from \"./components/DragDrop\";\nimport \"./index.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Upload Video</h1>\n      <DragDrop />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}